import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as l,b as a,d as n,e as s,f as e}from"./app-3e26155d.js";const r={},i=e(`<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.bilibili.com<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>iframe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>400<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>600<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>no<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>你的浏览器不支持该iframe标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="优点" tabindex="-1"><a class="header-anchor" href="#优点" aria-hidden="true">#</a> 优点</h2>`,3),u=a("li",null,[a("p",null,"模块化，头部和侧边栏一样，中间内容嵌套写")],-1),d=a("p",null,"解决跨域",-1),m=a("br",null,null,-1),h={href:"http://xn--a-ch1bt67c.xn--com1-221g.a.com",target:"_blank",rel:"noopener noreferrer"},k={href:"http://1.a.xn--com2-221g.a.com",target:"_blank",rel:"noopener noreferrer"},_={href:"http://a.com",target:"_blank",rel:"noopener noreferrer"},f=e('<h2 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h2><ul><li><p>代码复杂，不利于seo</p></li><li><p>iframe框架页面会增加服务器的http请求</p></li><li><p>很多的移动设备无法完全显示框架，设备兼容性差</p></li><li><p>阻塞页面，非常的耗资源，加载速度比script css等慢一两个等级</p></li><li><p>阻塞onload事件</p><p>window 的 onload 事件需要在所有 iframe 加载完毕后(包含里面的元素)才会触发。在 Safari 和 Chrome 里，通过 JavaScript 动态设置 iframe 的 SRC 可以避免这种阻塞情况。</p></li></ul>',2);function q(g,v){const t=p("ExternalLinkIcon");return c(),l("div",null,[i,a("ul",null,[u,a("li",null,[d,a("p",null,[n("document.domain+iframe"),m,n(" 这个方法只能用于同一个主域下不同子域之间的跨域请求，"),a("a",h,[n("比如a.com和1.a.com"),s(t)]),n(" 之间，"),a("a",k,[n("1.a.com和2.a.com"),s(t)]),n(' 之间。 只要把两个页面的document.domian都指向主域就可以了，比如document.domain="'),a("a",_,[n("a.com"),s(t)]),n('"。 ​父页面通过iframe嵌入子页面，通过iframe.contentWindow获取子页面的window,即可操作子页面，子页面通过parent.window和parent来访问父页面的window。')])])]),f])}const x=o(r,[["render",q],["__file","iframe.html.vue"]]);export{x as default};
