const e=JSON.parse('{"key":"v-e29a1286","path":"/technology/VUE/router.html","title":"vue路由","lang":"zh-CN","frontmatter":{"title":"vue路由","category":["面试","知识点"],"tag":["VUE","路由"],"star":false,"sticky":false,"article":true,"description":"前言 传统的网页根据用户访问的不同的地址，浏览器从服务器获取对应页面的内容展示给用户。这样造成服务器压力比较大，而且用户访问速度也比较慢。 前端路由 hash模式就是通过监听浏览器的hash值(锚点)来实现前端渲染； history模式是通过操作浏览器的历史记录并监听这个动作来实现前端渲染。浏览器每访问一个地址，都会在浏览器栈里存入路径记录。 模式 hash模式：location.hash+hashchange location.hash始终指向页面url中#之后的内容，用来修改浏览器的地址； hashchange来监听变化做出相应渲染 ​","head":[["meta",{"property":"og:url","content":"https://leoleor.github.io/test/technology/VUE/router.html"}],["meta",{"property":"og:site_name","content":"一只攻城狮"}],["meta",{"property":"og:title","content":"vue路由"}],["meta",{"property":"og:description","content":"前言 传统的网页根据用户访问的不同的地址，浏览器从服务器获取对应页面的内容展示给用户。这样造成服务器压力比较大，而且用户访问速度也比较慢。 前端路由 hash模式就是通过监听浏览器的hash值(锚点)来实现前端渲染； history模式是通过操作浏览器的历史记录并监听这个动作来实现前端渲染。浏览器每访问一个地址，都会在浏览器栈里存入路径记录。 模式 hash模式：location.hash+hashchange location.hash始终指向页面url中#之后的内容，用来修改浏览器的地址； hashchange来监听变化做出相应渲染 ​"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-22T09:43:27.000Z"}],["meta",{"property":"article:author","content":"狮子"}],["meta",{"property":"article:tag","content":"VUE"}],["meta",{"property":"article:tag","content":"路由"}],["meta",{"property":"article:modified_time","content":"2025-02-22T09:43:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue路由\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-22T09:43:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"狮子\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"前端路由","slug":"前端路由","link":"#前端路由","children":[{"level":3,"title":"模式","slug":"模式","link":"#模式","children":[]},{"level":3,"title":"区别","slug":"区别","link":"#区别","children":[]}]},{"level":2,"title":"$router","slug":"router","link":"#router","children":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":3,"title":"方法","slug":"方法","link":"#方法","children":[]}]},{"level":2,"title":"$route","slug":"route","link":"#route","children":[{"level":3,"title":"概念","slug":"概念-1","link":"#概念-1","children":[]},{"level":3,"title":"属性","slug":"属性-1","link":"#属性-1","children":[]}]},{"level":2,"title":"路由钩子","slug":"路由钩子","link":"#路由钩子","children":[]},{"level":2,"title":"路由组件","slug":"路由组件","link":"#路由组件","children":[]},{"level":2,"title":"路由懒加载","slug":"路由懒加载","link":"#路由懒加载","children":[]},{"level":2,"title":"动态路由","slug":"动态路由","link":"#动态路由","children":[{"level":3,"title":"前端控制","slug":"前端控制","link":"#前端控制","children":[]},{"level":3,"title":"后端控制","slug":"后端控制","link":"#后端控制","children":[]}]},{"level":2,"title":"浏览器跳转和路由跳转","slug":"浏览器跳转和路由跳转","link":"#浏览器跳转和路由跳转","children":[]}],"git":{"createdTime":1740217407000,"updatedTime":1740217407000,"contributors":[{"name":"狮子","email":"hzr1642921219@163.com","commits":1}]},"readingTime":{"minutes":4.35,"words":1305},"filePathRelative":"technology/VUE/router.md","localizedDate":"2025年2月22日","excerpt":"<h2> 前言</h2>\\n<p>传统的网页根据用户访问的不同的地址，浏览器从服务器获取对应页面的内容展示给用户。这样造成服务器压力比较大，而且用户访问速度也比较慢。</p>\\n<h2> 前端路由</h2>\\n<p>hash模式就是通过监听浏览器的hash值(锚点)来实现前端渲染；<br>\\nhistory模式是通过操作浏览器的历史记录并监听这个动作来实现前端渲染。浏览器每访问一个地址，都会在浏览器栈里存入路径记录。</p>\\n<h3> 模式</h3>\\n<ul>\\n<li>hash模式：location.hash+hashchange</li>\\n</ul>\\n<p>location.hash始终指向页面url中#之后的内容，用来修改浏览器的地址；<br>\\nhashchange来监听变化做出相应渲染\\n​</p>","autoDesc":true}');export{e as data};
