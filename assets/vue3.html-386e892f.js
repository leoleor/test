import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as n,f as e}from"./app-aa5ccc09.js";const t="/Lion_Blog/images/vue/vue2_vs_vue3_life.jpg",p={},o=e('<h2 id="与vue2相比" tabindex="-1"><a class="header-anchor" href="#与vue2相比" aria-hidden="true">#</a> 与vue2相比</h2><h3 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期" aria-hidden="true">#</a> 生命周期</h3><figure><img src="'+t+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>钩子函数加 <code>on</code></li><li><code>beforeCreate</code> 和 <code>created</code> 包含在 <code>setup</code> 函数中</li><li><code>beforeDestroy</code> 改为 <code>onBeforeUnmount</code>，<code>destroyed</code> 改为 <code>onUnmounted</code></li></ul><h3 id="响应式原理" tabindex="-1"><a class="header-anchor" href="#响应式原理" aria-hidden="true">#</a> 响应式原理</h3><ul><li>vue2: Object.defineProperty()</li><li>vue3: Proxy</li></ul><h3 id="定义响应式数据" tabindex="-1"><a class="header-anchor" href="#定义响应式数据" aria-hidden="true">#</a> 定义响应式数据</h3><ul><li>ref 基本数据类型</li><li>reactive 引用数据类型</li><li>toRefs 解构 let num = toRefs(reactive(obj))</li></ul><blockquote><p>注意.value</p></blockquote><h3 id="多根节点" tabindex="-1"><a class="header-anchor" href="#多根节点" aria-hidden="true">#</a> 多根节点</h3><p>不需要在div外面包裹一层template</p><h3 id="script-setup-语法糖" tabindex="-1"><a class="header-anchor" href="#script-setup-语法糖" aria-hidden="true">#</a> script setup 语法糖</h3><ul><li>变量不需要return</li><li>组件只需引入不用注册</li></ul><h3 id="组合式-composition-api" tabindex="-1"><a class="header-anchor" href="#组合式-composition-api" aria-hidden="true">#</a> 组合式 Composition API</h3><ul><li><p>vue2（option API）</p><ul><li>处理数据</li></ul><p>将代码分割到各个钩子函数中（data，methods，watch，computed），导致大型页面和组件后期代码臃肿，难于阅读</p><ul><li>复用逻辑</li></ul><p>通过mixins，缺点：命名空间冲突 &amp; 渲染上下文中暴露的 property 来源不清晰</p></li><li><p>vue3</p><ul><li>自定义hooks</li></ul><p>把处理同一逻辑的操作写在一起，封装成一个函数</p></li></ul><h3 id="周边" tabindex="-1"><a class="header-anchor" href="#周边" aria-hidden="true">#</a> 周边</h3><ul><li>vue-cli 4.5.0</li><li>Vue Router 4.0</li><li>Vuex 4.0</li><li>Element plus</li><li>Vite</li><li>Pinia</li></ul><h2 id="实际用法相比" tabindex="-1"><a class="header-anchor" href="#实际用法相比" aria-hidden="true">#</a> 实际用法相比</h2><h3 id="插槽" tabindex="-1"><a class="header-anchor" href="#插槽" aria-hidden="true">#</a> 插槽</h3><ul><li>vue2插槽可以在任意元素上</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div slot<span class="token operator">=</span><span class="token string">&quot;left&quot;</span><span class="token operator">&gt;</span>我是插槽<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>vue3插槽需要在template元素上</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template #left<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>我是插槽<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="绑定全局变量" tabindex="-1"><a class="header-anchor" href="#绑定全局变量" aria-hidden="true">#</a> 绑定全局变量</h3><ul><li>vue2</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>main<span class="token punctuation">.</span>js

<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$store <span class="token operator">=</span> store
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>vue3</p><ul><li>app.config.globalProperties</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>main<span class="token punctuation">.</span>js

app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$timeFormat <span class="token operator">=</span> timeFormat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>template中直接用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">$timeFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>script中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> proxy <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

proxy<span class="token punctuation">.</span><span class="token function">$timeFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>provide/inject</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>main<span class="token punctuation">.</span>js

app<span class="token punctuation">.</span><span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">&#39;global&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">$timeFormat</span><span class="token operator">:</span> timeFormat
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>template中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> global<span class="token punctuation">.</span><span class="token function">$timeFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>script中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> inject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">const</span> global <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&#39;global&#39;</span><span class="token punctuation">)</span>

global<span class="token punctuation">.</span><span class="token function">$timeFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="获取元素信息-ref" tabindex="-1"><a class="header-anchor" href="#获取元素信息-ref" aria-hidden="true">#</a> 获取元素信息(ref)</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div ref<span class="token operator">=</span><span class="token string">&quot;panelRef&quot;</span> id<span class="token operator">=</span><span class="token string">&quot;panel&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>vue2</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>panelRef
<span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>panelRef<span class="token punctuation">.</span>offsetWidth
<span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>panelRef<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>vue3</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> element <span class="token operator">=</span> instance<span class="token operator">?.</span>refs<span class="token punctuation">.</span>panelRef<span class="token operator">?.</span>$el <span class="token keyword">as</span> HTMLElement
element<span class="token punctuation">.</span>offsetWidth
element<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&#39;red&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">通过ID获取</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// document.querySelector(&#39;#panel&#39;) || document.getElementById(&#39;panel&#39;)</span>
<span class="token keyword">const</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;panel&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLElement
element<span class="token punctuation">.</span>offsetWidth
element<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&#39;red&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="组件间调方法" tabindex="-1"><a class="header-anchor" href="#组件间调方法" aria-hidden="true">#</a> 组件间调方法</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>overlayDialog ref<span class="token operator">=</span><span class="token string">&quot;overlayDialogRef&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>overlayDialog里有一个initDialog方法</p><ul><li>vue2 正常调用</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>overlayDialogRef<span class="token punctuation">.</span><span class="token function">initDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>vue3 子组件需要defineExpose({ initDialog })</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> overlayDialogRef <span class="token operator">=</span> ref<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
overlayDialogRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">initDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="双向绑定" tabindex="-1"><a class="header-anchor" href="#双向绑定" aria-hidden="true">#</a> 双向绑定</h3><ul><li>vue2</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div <span class="token operator">:</span>visible<span class="token punctuation">.</span>sync<span class="token operator">=</span><span class="token string">&quot;show&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;update:visible&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>vue3</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div v<span class="token operator">-</span>model<span class="token operator">:</span>visible<span class="token operator">=</span><span class="token string">&quot;show&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

<span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;update:visible&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用calc" tabindex="-1"><a class="header-anchor" href="#使用calc" aria-hidden="true">#</a> 使用calc</h3><p>script中，在calc中使用模板字符串计算，vue2没问题，vue3不行</p><ul><li>vue2</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>pageStyle<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">height: calc(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> statusBarHeight <span class="token operator">*</span> <span class="token number">2</span> <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">rpx + 378rpx - 60rpx)</span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>vue3</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> calcValue <span class="token operator">=</span> statusBarHeight <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">378</span> <span class="token operator">-</span> <span class="token number">60</span>
pageStyle<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">height: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>calcValue<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">rpx</span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,52),l=[o];function i(c,r){return s(),n("div",null,l)}const v=a(p,[["render",i],["__file","vue3.html.vue"]]);export{v as default};
