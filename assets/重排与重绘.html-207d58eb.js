import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as d,c as a,f as o}from"./app-2c6ee9ee.js";const c={},i=o('<h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2><h3 id="重排" tabindex="-1"><a class="header-anchor" href="#重排" aria-hidden="true">#</a> 重排</h3><p>当DOM的变化影响了元素的<code>几何信息</code>，浏览器需要重新计算元素的几何属性，将其安放在界面中的正确位置，这个过程叫做重排。表现为重新生成布局，重新排列元素。</p><h3 id="重绘" tabindex="-1"><a class="header-anchor" href="#重绘" aria-hidden="true">#</a> 重绘</h3><p>当一个元素的外观发生改变，但没有改变布局,重新把元素外观绘制出来的过程，叫做重绘。表现为某些元素的外观被改变。<code>重绘不一定重排，重排一定重绘。</code></p><h2 id="如何触发" tabindex="-1"><a class="header-anchor" href="#如何触发" aria-hidden="true">#</a> 如何触发</h2><ol><li><code>添加、删除、更新DOM节点</code></li><li>通过 <code>display: none</code> 隐藏一个DOM节点(隐藏元素并脱离文档流)-触发重排和重绘</li><li>通过 <code>visibility: hidden</code> 隐藏一个DOM节点-只触发重绘，因为没有几何变化<br> (opacity: 0隐藏元素，不触发回流重绘，会触发绑定事件)</li><li>移动或者给页面中的DOM节点<code>添加动画</code></li><li><code>用户行为</code>，例如调整窗口大小，改变字号，或者滚动</li></ol><h2 id="如何避免" tabindex="-1"><a class="header-anchor" href="#如何避免" aria-hidden="true">#</a> 如何避免</h2><ol><li><code>最小化重绘和重排</code>，比如样式集中改变，使用添加新样式类名 .class 或 cssText</li><li><code>批量操作 DOM</code>，比如读取某元素 offsetWidth 属性存到一个临时变量，再去使用，而不是频繁使用这个计算属性；又比如利用 <code>document.createDocumentFragment()</code> 来添加要被添加的节点，处理完之后再插入到实际 DOM 中</li><li>使用 <code>absolute</code> 或 <code>fixed</code> 使元素脱离文档流，这在制作复杂的动画时对性能的影响比较明显</li><li>开启 <code>GPU 加速</code>，利用 css 属性 transform 、will-change 等，比如改变元素位置，我们使用 translate 会比使用绝对定位改变其 left 、top 等来的高效，因为它不会触发重排或重绘，transform 使浏览器为元素创建⼀个 GPU 图层，这使得动画元素在一个独立的层中进行渲染。当元素的内容没有发生改变，就没有必要进行重绘</li></ol>',9),r=[i];function t(l,h){return d(),a("div",null,r)}const _=e(c,[["render",t],["__file","重排与重绘.html.vue"]]);export{_ as default};
