import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o,c as l,f as i}from"./app-3e26155d.js";const c="/test/images/http/http_状态码.png",d={},t=i('<figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><p><code>1xx</code> 类状态码属于提示信息，是协议处理中的一种中间状态，实际用到的比较少。</p></li><li><p><code>2xx</code> 类状态码表示服务器成功处理了客户端的请求，也是我们最愿意看到的状态。</p><ul><li><p><code>「200 OK」</code>是最常见的成功状态码，表示一切正常。如果是非 HEAD 请求，服务器返回的响应头都会有 body 数据。</p></li><li><p><code>「204 No Content」</code>也是常见的成功状态码，与 200 OK 基本相同，但响应头没有 body 数据。</p></li><li><p><code>「206 Partial Content」</code>是应用于 HTTP 分块下载或断点续传，表示响应返回的 body 数据并不是资源的全部，而是其中的一部分，也是服务器处理成功的状态。</p></li></ul></li><li><p><code>3xx</code> 类状态码表示客户端请求的资源发生了变动，需要客户端用新的 URL 重新发送请求获取资源，也就是重定向。</p><ul><li><p><code>「301 Moved Permanently」</code>表示永久重定向，说明请求的资源已经不存在了，需改用新的 URL 再次访问。</p></li><li><p><code>「302 Found」</code>表示临时重定向，说明请求的资源还在，但暂时需要用另一个 URL 来访问。</p><p>301 和 302 都会在响应头里使用字段 Location，指明后续要跳转的 URL，浏览器会自动重定向新的 URL。</p></li><li><p><code>「304 Not Modified」</code>不具有跳转的含义，表示资源未修改，重定向已存在的缓冲文件，也称缓存重定向，也就是告诉客户端可以继续使用缓存资源，用于缓存控制。</p></li></ul></li><li><p><code>4xx</code> 类状态码表示客户端发送的报文有误，服务器无法处理，也就是错误码的含义。</p><ul><li><p><code>「400 Bad Request」</code>表示客户端请求的报文有错误，但只是个笼统的错误。</p></li><li><p><code>「403 Forbidden」</code>表示服务器禁止访问资源，并不是客户端的请求出错。</p></li><li><p><code>「404 Not Found」</code>表示请求的资源在服务器上不存在或未找到，所以无法提供给客户端。</p></li><li><p><code>「499」</code> 客户端发起请求后，一段时间没没有收到代理服务器的应答，导致连接失败</p></li></ul></li><li><p>5xx 类状态码表示客户端请求报文正确，但是服务器处理时内部发生了错误，属于服务器端的错误码。</p><ul><li><p><code>「500 Internal Server Error」</code>与 400 类型，是个笼统通用的错误码，服务器发生了什么错误，我们并不知道。</p></li><li><p><code>「501 Not Implemented」</code>表示客户端请求的功能还不支持，类似“即将开业，敬请期待”的意思。</p></li><li><p><code>「502 Bad Gateway」</code>通常是服务器作为网关或代理时返回的错误码，表示服务器自身工作正常，访问后端服务器发生了错误。</p></li><li><p><code>「503 Service Unavailable」</code>表示服务器当前很忙，暂时无法响应客户端，类似“网络服务正忙，请稍后重试”的意思。</p></li></ul></li></ul>',2),p=[t];function n(a,r){return o(),l("div",null,p)}const _=e(d,[["render",n],["__file","httpStatus.html.vue"]]);export{_ as default};
