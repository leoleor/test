import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as a,f as t}from"./app-cda9265d.js";const n="/Lion_Blog/images/javascript/检查数据类型_typeof.jpg",l="/Lion_Blog/images/javascript/检查数据类型_instanceof.jpg",o="/Lion_Blog/images/javascript/检查数据类型_prototype.jpg",r={},d=t('<h2 id="种类" tabindex="-1"><a class="header-anchor" href="#种类" aria-hidden="true">#</a> 种类</h2><ul><li>undefined</li><li>null</li><li>number</li><li>boolean</li><li>string</li><li>object</li><li>symbol(表示独一无二的值，定义对象唯一属性)</li><li>bigint(表示任意大小的整数)</li></ul><h2 id="检测方案" tabindex="-1"><a class="header-anchor" href="#检测方案" aria-hidden="true">#</a> 检测方案</h2><h3 id="typeof" tabindex="-1"><a class="header-anchor" href="#typeof" aria-hidden="true">#</a> typeof</h3><p>typeof：能判断所有值类型，函数。不可对 null、对象、数组进行精确判断，因为都返回 object</p><figure><img src="'+n+'" alt="typeof" tabindex="0" loading="lazy"><figcaption>typeof</figcaption></figure><h3 id="instanceof" tabindex="-1"><a class="header-anchor" href="#instanceof" aria-hidden="true">#</a> instanceof</h3><p>instanceof：能判断对象类型，不能判断基本数据类型，其内部运行机制是判断在其原型链中能否找到该类型的原型。</p><figure><img src="'+l+'" alt="instanceof" tabindex="0" loading="lazy"><figcaption>instanceof</figcaption></figure><h3 id="object-prototype-tostring-call" tabindex="-1"><a class="header-anchor" href="#object-prototype-tostring-call" aria-hidden="true">#</a> Object.prototype.toString.call()</h3><figure><img src="'+o+'" alt="Object.prototype.toString.call" tabindex="0" loading="lazy"><figcaption>Object.prototype.toString.call</figcaption></figure><h2 id="undefined和null" tabindex="-1"><a class="header-anchor" href="#undefined和null" aria-hidden="true">#</a> undefined和null</h2><h3 id="相同点" tabindex="-1"><a class="header-anchor" href="#相同点" aria-hidden="true">#</a> 相同点</h3><ul><li>转为Boolean类型都为false</li><li>undefined == null</li></ul><h3 id="不同点" tabindex="-1"><a class="header-anchor" href="#不同点" aria-hidden="true">#</a> 不同点</h3><ul><li>null是JavaScript的关键字；而undefined是JavaScript的一个全局变量，也就是挂载在window对象上的一个变量</li><li>在使用typeof运算符进行检测时，Undefined类型的值会返回undefined；而Null类型的值返回为object</li><li>在进行数值类型的转换时，undefined会转换为NaN，无法参与计算；而null会转换为0，可以参与计算</li></ul>',16),c=[d];function s(f,h){return e(),a("div",null,c)}const g=i(r,[["render",s],["__file","数据类型.html.vue"]]);export{g as default};
