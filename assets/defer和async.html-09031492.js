import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as r,f as s}from"./app-e1cdf69a.js";const c="/test/images/browser/script.jpg",i={},o=s('<figure><img src="'+c+'" alt="script 标签中 defer 和 async" tabindex="0" loading="lazy"><figcaption>script 标签中 defer 和 async</figcaption></figure><h2 id="html有两个script标签-他们的下载和解析是并行还是串行" tabindex="-1"><a class="header-anchor" href="#html有两个script标签-他们的下载和解析是并行还是串行" aria-hidden="true">#</a> html有两个script标签，他们的下载和解析是并行还是串行？</h2><p><strong>默认方式：</strong> 浏览器会并行加载script，但是执行是按书写顺序的，如果script1未执行完毕， 就不会开始执行script2，尽管script2已经加载完毕。 而且这种方式会阻碍script标签后面其他元素的渲染，直到script执行完毕才会渲染后面的dom。</p><p><strong>defer方式：</strong> 也叫<code>延迟脚本</code>，使用defer后，该脚本会被马上加载，但是脚本会被延迟到整个页面都解析完再执行，并且这两个脚本会按顺序执行。</p><p><strong>async方式：</strong> 也叫<code>异步脚本</code>，使用async后，该脚本会被马上加载，加载完立即执行，但是会影响页面的解析，这两个脚本谁先加载完谁就先执行。</p>',5),n=[o];function a(p,d){return e(),r("div",null,n)}const l=t(i,[["render",a],["__file","defer和async.html.vue"]]);export{l as default};
