const e=JSON.parse('{"key":"v-5f0b5bbb","path":"/accumulation/Browser/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B7%A8%E5%9F%9F.html","title":"浏览器跨域","lang":"zh-CN","frontmatter":{"title":"浏览器跨域","category":["面试"],"tag":["浏览器"],"star":false,"sticky":false,"article":true,"description":"原理 浏览器的同源策略：协议、域名、端口号 http://manage.adlt.clashpig.cn/ manage - 服务器 adlt - 域 clashpig - 机构 cn - 国家(可省) 解决跨域 Get请求没有跨域问题？ 通过 HTML 的静态资源加载机制实现的，不会涉及 AJAX 请求，所以不会触发跨域问题。 通过XMLHttpRequest 或 Fetch API 发起的 AJAX 请求，叠加同源策略中不同源的场景就会触发跨域问题了","head":[["meta",{"property":"og:url","content":"https://leoleor.github.io/test/accumulation/Browser/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B7%A8%E5%9F%9F.html"}],["meta",{"property":"og:site_name","content":"一只攻城狮"}],["meta",{"property":"og:title","content":"浏览器跨域"}],["meta",{"property":"og:description","content":"原理 浏览器的同源策略：协议、域名、端口号 http://manage.adlt.clashpig.cn/ manage - 服务器 adlt - 域 clashpig - 机构 cn - 国家(可省) 解决跨域 Get请求没有跨域问题？ 通过 HTML 的静态资源加载机制实现的，不会涉及 AJAX 请求，所以不会触发跨域问题。 通过XMLHttpRequest 或 Fetch API 发起的 AJAX 请求，叠加同源策略中不同源的场景就会触发跨域问题了"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-22T09:43:27.000Z"}],["meta",{"property":"article:author","content":"狮子"}],["meta",{"property":"article:tag","content":"浏览器"}],["meta",{"property":"article:modified_time","content":"2025-02-22T09:43:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"浏览器跨域\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-22T09:43:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"狮子\\"}]}"]]},"headers":[{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"解决跨域","slug":"解决跨域","link":"#解决跨域","children":[{"level":3,"title":"JSONP","slug":"jsonp","link":"#jsonp","children":[]},{"level":3,"title":"CORS","slug":"cors","link":"#cors","children":[]},{"level":3,"title":"Nginx反向代理（后台）","slug":"nginx反向代理-后台","link":"#nginx反向代理-后台","children":[]},{"level":3,"title":"Proxy代理（前端开发环境）","slug":"proxy代理-前端开发环境","link":"#proxy代理-前端开发环境","children":[]}]}],"git":{"createdTime":1740217407000,"updatedTime":1740217407000,"contributors":[{"name":"狮子","email":"hzr1642921219@163.com","commits":1}]},"readingTime":{"minutes":0.93,"words":279},"filePathRelative":"accumulation/Browser/浏览器跨域.md","localizedDate":"2025年2月22日","excerpt":"<h2> 原理</h2>\\n<p>浏览器的同源策略：协议、域名、端口号</p>\\n<p><a href=\\"http://manage.adlt.clashpig.cn/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://manage.adlt.clashpig.cn/</a></p>\\n<ul>\\n<li>manage - 服务器</li>\\n<li>adlt - 域</li>\\n<li>clashpig - 机构</li>\\n<li>cn - 国家(可省)</li>\\n</ul>\\n<h2> 解决跨域</h2>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">Get请求没有跨域问题？</p>\\n<ul>\\n<li>通过 HTML 的<code>静态资源加载机制实现</code>的，不会涉及 AJAX 请求，所以<code>不会触发跨域问题</code>。</li>\\n<li>通过XMLHttpRequest 或 Fetch API 发起的 <code>AJAX</code> 请求，叠加同源策略中不同源的场景就<code>会触发跨域</code>问题了</li>\\n</ul>\\n</div>","autoDesc":true}');export{e as data};
